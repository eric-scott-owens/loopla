# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2019-04-04 13:57
from __future__ import unicode_literals

import os
from django.db import migrations
from django.core.files.base import ContentFile


def migrate_post_photos_to_photo_collections(apps, schema_editor):
  Post = apps.get_model('dashboard', 'Post')
  Comment = apps.get_model('dashboard', 'Comment')
  PostPhoto = apps.get_model('dashboard', 'PostPhoto')
  ContentType = apps.get_model('contenttypes', 'ContentType')
  PhotoCollectionComponent = apps.get_model('dashboard', 'PhotoCollectionComponent')
  PhotoCollectionPhoto = apps.get_model('dashboard', 'PhotoCollectionPhoto')
  Photo = apps.get_model('dashboard', 'Photo')

  for post in Post.objects.all():
    photo_collection = PhotoCollectionComponent(content_type=ContentType.objects.get_for_model(post),
                                                object_id=post.id,
                                                ordering_index=3)

    photo_collection.owner = post.owner
    photo_collection.group = post.group
    photo_collection.save()

    ordering_index = 0
    post_photos = PostPhoto.objects.filter(content_type=ContentType.objects.get_for_model(post), 
                                           object_id=post.id
                                        ).all()

    for post_photo in post_photos:
      photo = Photo(date_added=post_photo.date_added,
                    caption=post_photo.caption)


      photo.owner = post.owner
      photo.group = post.group
      
      image_file = ContentFile(post_photo.photo.read())
      image_file.name = os.path.split(post_photo.photo.file.name)[-1]
      photo.image = image_file
      post_photo.photo.file.close()

      thumbnail_file = ContentFile(post_photo.photo.read())
      thumbnail_file.name = os.path.split(post_photo.photo.file.name)[-1]
      photo.thumbnail = thumbnail_file
      post_photo.photo.file.close()

      photo.save()

      photo_collection_photo = PhotoCollectionPhoto(photo_collection=photo_collection,
                                                    photo=photo,
                                                    ordering_index=ordering_index)
                                                    
      photo_collection_photo.save()
    
      post_photo.photo.delete()
      post_photo.delete()
      ordering_index += 1
      
  for comment in Comment.objects.all():
    photo_collection = PhotoCollectionComponent(content_type=ContentType.objects.get_for_model(comment),
                                                object_id=comment.id,
                                                ordering_index=3)

    photo_collection.owner = comment.owner
    photo_collection.group = comment.post.group
    photo_collection.save()

    ordering_index = 0
    post_photos = PostPhoto.objects.filter(content_type=ContentType.objects.get_for_model(comment), 
                                           object_id=comment.id
                                        ).all()

    for post_photo in post_photos:
      photo = Photo(date_added=post_photo.date_added,
                    caption=post_photo.caption)


      photo.owner = comment.owner
      photo.group = comment.post.group
      
      image_file = ContentFile(post_photo.photo.read())
      image_file.name = os.path.split(post_photo.photo.file.name)[-1]
      photo.image = image_file
      post_photo.photo.file.close()

      thumbnail_file = ContentFile(post_photo.photo.read())
      thumbnail_file.name = os.path.split(post_photo.photo.file.name)[-1]
      photo.thumbnail = thumbnail_file
      post_photo.photo.close()
      
      photo.save()

      photo_collection_photo = PhotoCollectionPhoto(photo_collection=photo_collection,
                                                    photo=photo,
                                                    ordering_index=ordering_index)
                                                    
      photo_collection_photo.save()
    
      post_photo.photo.delete()
      post_photo.delete()
      ordering_index += 1

  # 3

class Migration(migrations.Migration):

  dependencies = [
    ('dashboard', '0064_added_photo_collection_component'),
  ]

  operations = [
    migrations.RunPython(migrate_post_photos_to_photo_collections),
  ]

